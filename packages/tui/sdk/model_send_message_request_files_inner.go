/*
kuuzuki

kuuzuki API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kuuzuki

import (
	"encoding/json"
)

// checks if the SendMessageRequestFilesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendMessageRequestFilesInner{}

// SendMessageRequestFilesInner struct for SendMessageRequestFilesInner
type SendMessageRequestFilesInner struct {
	Path    *string `json:"path,omitempty"`
	Content *string `json:"content,omitempty"`
}

// NewSendMessageRequestFilesInner instantiates a new SendMessageRequestFilesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendMessageRequestFilesInner() *SendMessageRequestFilesInner {
	this := SendMessageRequestFilesInner{}
	return &this
}

// NewSendMessageRequestFilesInnerWithDefaults instantiates a new SendMessageRequestFilesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendMessageRequestFilesInnerWithDefaults() *SendMessageRequestFilesInner {
	this := SendMessageRequestFilesInner{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *SendMessageRequestFilesInner) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMessageRequestFilesInner) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SendMessageRequestFilesInner) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *SendMessageRequestFilesInner) SetPath(v string) {
	o.Path = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *SendMessageRequestFilesInner) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMessageRequestFilesInner) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *SendMessageRequestFilesInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *SendMessageRequestFilesInner) SetContent(v string) {
	o.Content = &v
}

func (o SendMessageRequestFilesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendMessageRequestFilesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	return toSerialize, nil
}

type NullableSendMessageRequestFilesInner struct {
	value *SendMessageRequestFilesInner
	isSet bool
}

func (v NullableSendMessageRequestFilesInner) Get() *SendMessageRequestFilesInner {
	return v.value
}

func (v *NullableSendMessageRequestFilesInner) Set(val *SendMessageRequestFilesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSendMessageRequestFilesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSendMessageRequestFilesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendMessageRequestFilesInner(val *SendMessageRequestFilesInner) *NullableSendMessageRequestFilesInner {
	return &NullableSendMessageRequestFilesInner{value: val, isSet: true}
}

func (v NullableSendMessageRequestFilesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendMessageRequestFilesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
