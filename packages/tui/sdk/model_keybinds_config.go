/*
kuucode

opencode api

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kuucode

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KeybindsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeybindsConfig{}

// KeybindsConfig struct for KeybindsConfig
type KeybindsConfig struct {
	// Leader key for keybind combinations
	Leader string `json:"leader"`
	// Show help dialog
	AppHelp string `json:"app_help"`
	// Next mode
	SwitchMode string `json:"switch_mode"`
	// Previous Mode
	SwitchModeReverse string `json:"switch_mode_reverse"`
	// Open external editor
	EditorOpen string `json:"editor_open"`
	// Export session to editor
	SessionExport string `json:"session_export"`
	// Create a new session
	SessionNew string `json:"session_new"`
	// List all sessions
	SessionList string `json:"session_list"`
	// Share current session
	SessionShare string `json:"session_share"`
	// Unshare current session
	SessionUnshare string `json:"session_unshare"`
	// Interrupt current session
	SessionInterrupt string `json:"session_interrupt"`
	// Compact the session
	SessionCompact string `json:"session_compact"`
	// Toggle tool details
	ToolDetails string `json:"tool_details"`
	// List available models
	ModelList string `json:"model_list"`
	// List available themes
	ThemeList string `json:"theme_list"`
	// List files
	FileList string `json:"file_list"`
	// Close file
	FileClose string `json:"file_close"`
	// Search file
	FileSearch string `json:"file_search"`
	// Split/unified diff
	FileDiffToggle string `json:"file_diff_toggle"`
	// Create/update .agentrc
	ProjectInit string `json:"project_init"`
	// Clear input field
	InputClear string `json:"input_clear"`
	// Paste from clipboard
	InputPaste string `json:"input_paste"`
	// Submit input
	InputSubmit string `json:"input_submit"`
	// Insert newline in input
	InputNewline string `json:"input_newline"`
	// Scroll messages up by one page
	MessagesPageUp string `json:"messages_page_up"`
	// Scroll messages down by one page
	MessagesPageDown string `json:"messages_page_down"`
	// Scroll messages up by half page
	MessagesHalfPageUp string `json:"messages_half_page_up"`
	// Scroll messages down by half page
	MessagesHalfPageDown string `json:"messages_half_page_down"`
	// Navigate to previous message
	MessagesPrevious string `json:"messages_previous"`
	// Navigate to next message
	MessagesNext string `json:"messages_next"`
	// Navigate to first message
	MessagesFirst string `json:"messages_first"`
	// Navigate to last message
	MessagesLast string `json:"messages_last"`
	// Toggle layout
	MessagesLayoutToggle string `json:"messages_layout_toggle"`
	// Copy message
	MessagesCopy string `json:"messages_copy"`
	// Revert message
	MessagesRevert string `json:"messages_revert"`
	// Exit the application
	AppExit string `json:"app_exit"`
}

type _KeybindsConfig KeybindsConfig

// NewKeybindsConfig instantiates a new KeybindsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeybindsConfig(leader string, appHelp string, switchMode string, switchModeReverse string, editorOpen string, sessionExport string, sessionNew string, sessionList string, sessionShare string, sessionUnshare string, sessionInterrupt string, sessionCompact string, toolDetails string, modelList string, themeList string, fileList string, fileClose string, fileSearch string, fileDiffToggle string, projectInit string, inputClear string, inputPaste string, inputSubmit string, inputNewline string, messagesPageUp string, messagesPageDown string, messagesHalfPageUp string, messagesHalfPageDown string, messagesPrevious string, messagesNext string, messagesFirst string, messagesLast string, messagesLayoutToggle string, messagesCopy string, messagesRevert string, appExit string) *KeybindsConfig {
	this := KeybindsConfig{}
	this.Leader = leader
	this.AppHelp = appHelp
	this.SwitchMode = switchMode
	this.SwitchModeReverse = switchModeReverse
	this.EditorOpen = editorOpen
	this.SessionExport = sessionExport
	this.SessionNew = sessionNew
	this.SessionList = sessionList
	this.SessionShare = sessionShare
	this.SessionUnshare = sessionUnshare
	this.SessionInterrupt = sessionInterrupt
	this.SessionCompact = sessionCompact
	this.ToolDetails = toolDetails
	this.ModelList = modelList
	this.ThemeList = themeList
	this.FileList = fileList
	this.FileClose = fileClose
	this.FileSearch = fileSearch
	this.FileDiffToggle = fileDiffToggle
	this.ProjectInit = projectInit
	this.InputClear = inputClear
	this.InputPaste = inputPaste
	this.InputSubmit = inputSubmit
	this.InputNewline = inputNewline
	this.MessagesPageUp = messagesPageUp
	this.MessagesPageDown = messagesPageDown
	this.MessagesHalfPageUp = messagesHalfPageUp
	this.MessagesHalfPageDown = messagesHalfPageDown
	this.MessagesPrevious = messagesPrevious
	this.MessagesNext = messagesNext
	this.MessagesFirst = messagesFirst
	this.MessagesLast = messagesLast
	this.MessagesLayoutToggle = messagesLayoutToggle
	this.MessagesCopy = messagesCopy
	this.MessagesRevert = messagesRevert
	this.AppExit = appExit
	return &this
}

// NewKeybindsConfigWithDefaults instantiates a new KeybindsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeybindsConfigWithDefaults() *KeybindsConfig {
	this := KeybindsConfig{}
	var leader string = "ctrl+x"
	this.Leader = leader
	var appHelp string = "<leader>h"
	this.AppHelp = appHelp
	var switchMode string = "tab"
	this.SwitchMode = switchMode
	var switchModeReverse string = "shift+tab"
	this.SwitchModeReverse = switchModeReverse
	var editorOpen string = "<leader>e"
	this.EditorOpen = editorOpen
	var sessionExport string = "<leader>x"
	this.SessionExport = sessionExport
	var sessionNew string = "<leader>n"
	this.SessionNew = sessionNew
	var sessionList string = "<leader>l"
	this.SessionList = sessionList
	var sessionShare string = "<leader>s"
	this.SessionShare = sessionShare
	var sessionUnshare string = "<leader>u"
	this.SessionUnshare = sessionUnshare
	var sessionInterrupt string = "esc"
	this.SessionInterrupt = sessionInterrupt
	var sessionCompact string = "<leader>c"
	this.SessionCompact = sessionCompact
	var toolDetails string = "<leader>d"
	this.ToolDetails = toolDetails
	var modelList string = "<leader>m"
	this.ModelList = modelList
	var themeList string = "<leader>t"
	this.ThemeList = themeList
	var fileList string = "<leader>f"
	this.FileList = fileList
	var fileClose string = "esc"
	this.FileClose = fileClose
	var fileSearch string = "<leader>/"
	this.FileSearch = fileSearch
	var fileDiffToggle string = "<leader>v"
	this.FileDiffToggle = fileDiffToggle
	var projectInit string = "<leader>i"
	this.ProjectInit = projectInit
	var inputClear string = "ctrl+c"
	this.InputClear = inputClear
	var inputPaste string = "ctrl+v"
	this.InputPaste = inputPaste
	var inputSubmit string = "enter"
	this.InputSubmit = inputSubmit
	var inputNewline string = "shift+enter,ctrl+j"
	this.InputNewline = inputNewline
	var messagesPageUp string = "pgup"
	this.MessagesPageUp = messagesPageUp
	var messagesPageDown string = "pgdown"
	this.MessagesPageDown = messagesPageDown
	var messagesHalfPageUp string = "ctrl+alt+u"
	this.MessagesHalfPageUp = messagesHalfPageUp
	var messagesHalfPageDown string = "ctrl+alt+d"
	this.MessagesHalfPageDown = messagesHalfPageDown
	var messagesPrevious string = "ctrl+up"
	this.MessagesPrevious = messagesPrevious
	var messagesNext string = "ctrl+down"
	this.MessagesNext = messagesNext
	var messagesFirst string = "ctrl+g"
	this.MessagesFirst = messagesFirst
	var messagesLast string = "ctrl+alt+g"
	this.MessagesLast = messagesLast
	var messagesLayoutToggle string = "<leader>p"
	this.MessagesLayoutToggle = messagesLayoutToggle
	var messagesCopy string = "<leader>y"
	this.MessagesCopy = messagesCopy
	var messagesRevert string = "<leader>r"
	this.MessagesRevert = messagesRevert
	var appExit string = "ctrl+c,<leader>q"
	this.AppExit = appExit
	return &this
}

// GetLeader returns the Leader field value
func (o *KeybindsConfig) GetLeader() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Leader
}

// GetLeaderOk returns a tuple with the Leader field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetLeaderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Leader, true
}

// SetLeader sets field value
func (o *KeybindsConfig) SetLeader(v string) {
	o.Leader = v
}

// GetAppHelp returns the AppHelp field value
func (o *KeybindsConfig) GetAppHelp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppHelp
}

// GetAppHelpOk returns a tuple with the AppHelp field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetAppHelpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppHelp, true
}

// SetAppHelp sets field value
func (o *KeybindsConfig) SetAppHelp(v string) {
	o.AppHelp = v
}

// GetSwitchMode returns the SwitchMode field value
func (o *KeybindsConfig) GetSwitchMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwitchMode
}

// GetSwitchModeOk returns a tuple with the SwitchMode field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetSwitchModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwitchMode, true
}

// SetSwitchMode sets field value
func (o *KeybindsConfig) SetSwitchMode(v string) {
	o.SwitchMode = v
}

// GetSwitchModeReverse returns the SwitchModeReverse field value
func (o *KeybindsConfig) GetSwitchModeReverse() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwitchModeReverse
}

// GetSwitchModeReverseOk returns a tuple with the SwitchModeReverse field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetSwitchModeReverseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwitchModeReverse, true
}

// SetSwitchModeReverse sets field value
func (o *KeybindsConfig) SetSwitchModeReverse(v string) {
	o.SwitchModeReverse = v
}

// GetEditorOpen returns the EditorOpen field value
func (o *KeybindsConfig) GetEditorOpen() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EditorOpen
}

// GetEditorOpenOk returns a tuple with the EditorOpen field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetEditorOpenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EditorOpen, true
}

// SetEditorOpen sets field value
func (o *KeybindsConfig) SetEditorOpen(v string) {
	o.EditorOpen = v
}

// GetSessionExport returns the SessionExport field value
func (o *KeybindsConfig) GetSessionExport() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionExport
}

// GetSessionExportOk returns a tuple with the SessionExport field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetSessionExportOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionExport, true
}

// SetSessionExport sets field value
func (o *KeybindsConfig) SetSessionExport(v string) {
	o.SessionExport = v
}

// GetSessionNew returns the SessionNew field value
func (o *KeybindsConfig) GetSessionNew() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionNew
}

// GetSessionNewOk returns a tuple with the SessionNew field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetSessionNewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionNew, true
}

// SetSessionNew sets field value
func (o *KeybindsConfig) SetSessionNew(v string) {
	o.SessionNew = v
}

// GetSessionList returns the SessionList field value
func (o *KeybindsConfig) GetSessionList() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionList
}

// GetSessionListOk returns a tuple with the SessionList field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetSessionListOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionList, true
}

// SetSessionList sets field value
func (o *KeybindsConfig) SetSessionList(v string) {
	o.SessionList = v
}

// GetSessionShare returns the SessionShare field value
func (o *KeybindsConfig) GetSessionShare() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionShare
}

// GetSessionShareOk returns a tuple with the SessionShare field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetSessionShareOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionShare, true
}

// SetSessionShare sets field value
func (o *KeybindsConfig) SetSessionShare(v string) {
	o.SessionShare = v
}

// GetSessionUnshare returns the SessionUnshare field value
func (o *KeybindsConfig) GetSessionUnshare() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionUnshare
}

// GetSessionUnshareOk returns a tuple with the SessionUnshare field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetSessionUnshareOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionUnshare, true
}

// SetSessionUnshare sets field value
func (o *KeybindsConfig) SetSessionUnshare(v string) {
	o.SessionUnshare = v
}

// GetSessionInterrupt returns the SessionInterrupt field value
func (o *KeybindsConfig) GetSessionInterrupt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionInterrupt
}

// GetSessionInterruptOk returns a tuple with the SessionInterrupt field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetSessionInterruptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionInterrupt, true
}

// SetSessionInterrupt sets field value
func (o *KeybindsConfig) SetSessionInterrupt(v string) {
	o.SessionInterrupt = v
}

// GetSessionCompact returns the SessionCompact field value
func (o *KeybindsConfig) GetSessionCompact() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionCompact
}

// GetSessionCompactOk returns a tuple with the SessionCompact field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetSessionCompactOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionCompact, true
}

// SetSessionCompact sets field value
func (o *KeybindsConfig) SetSessionCompact(v string) {
	o.SessionCompact = v
}

// GetToolDetails returns the ToolDetails field value
func (o *KeybindsConfig) GetToolDetails() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToolDetails
}

// GetToolDetailsOk returns a tuple with the ToolDetails field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetToolDetailsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToolDetails, true
}

// SetToolDetails sets field value
func (o *KeybindsConfig) SetToolDetails(v string) {
	o.ToolDetails = v
}

// GetModelList returns the ModelList field value
func (o *KeybindsConfig) GetModelList() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelList
}

// GetModelListOk returns a tuple with the ModelList field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetModelListOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelList, true
}

// SetModelList sets field value
func (o *KeybindsConfig) SetModelList(v string) {
	o.ModelList = v
}

// GetThemeList returns the ThemeList field value
func (o *KeybindsConfig) GetThemeList() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ThemeList
}

// GetThemeListOk returns a tuple with the ThemeList field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetThemeListOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThemeList, true
}

// SetThemeList sets field value
func (o *KeybindsConfig) SetThemeList(v string) {
	o.ThemeList = v
}

// GetFileList returns the FileList field value
func (o *KeybindsConfig) GetFileList() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileList
}

// GetFileListOk returns a tuple with the FileList field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetFileListOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileList, true
}

// SetFileList sets field value
func (o *KeybindsConfig) SetFileList(v string) {
	o.FileList = v
}

// GetFileClose returns the FileClose field value
func (o *KeybindsConfig) GetFileClose() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileClose
}

// GetFileCloseOk returns a tuple with the FileClose field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetFileCloseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileClose, true
}

// SetFileClose sets field value
func (o *KeybindsConfig) SetFileClose(v string) {
	o.FileClose = v
}

// GetFileSearch returns the FileSearch field value
func (o *KeybindsConfig) GetFileSearch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileSearch
}

// GetFileSearchOk returns a tuple with the FileSearch field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetFileSearchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileSearch, true
}

// SetFileSearch sets field value
func (o *KeybindsConfig) SetFileSearch(v string) {
	o.FileSearch = v
}

// GetFileDiffToggle returns the FileDiffToggle field value
func (o *KeybindsConfig) GetFileDiffToggle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileDiffToggle
}

// GetFileDiffToggleOk returns a tuple with the FileDiffToggle field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetFileDiffToggleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileDiffToggle, true
}

// SetFileDiffToggle sets field value
func (o *KeybindsConfig) SetFileDiffToggle(v string) {
	o.FileDiffToggle = v
}

// GetProjectInit returns the ProjectInit field value
func (o *KeybindsConfig) GetProjectInit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectInit
}

// GetProjectInitOk returns a tuple with the ProjectInit field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetProjectInitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectInit, true
}

// SetProjectInit sets field value
func (o *KeybindsConfig) SetProjectInit(v string) {
	o.ProjectInit = v
}

// GetInputClear returns the InputClear field value
func (o *KeybindsConfig) GetInputClear() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InputClear
}

// GetInputClearOk returns a tuple with the InputClear field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetInputClearOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputClear, true
}

// SetInputClear sets field value
func (o *KeybindsConfig) SetInputClear(v string) {
	o.InputClear = v
}

// GetInputPaste returns the InputPaste field value
func (o *KeybindsConfig) GetInputPaste() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InputPaste
}

// GetInputPasteOk returns a tuple with the InputPaste field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetInputPasteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputPaste, true
}

// SetInputPaste sets field value
func (o *KeybindsConfig) SetInputPaste(v string) {
	o.InputPaste = v
}

// GetInputSubmit returns the InputSubmit field value
func (o *KeybindsConfig) GetInputSubmit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InputSubmit
}

// GetInputSubmitOk returns a tuple with the InputSubmit field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetInputSubmitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputSubmit, true
}

// SetInputSubmit sets field value
func (o *KeybindsConfig) SetInputSubmit(v string) {
	o.InputSubmit = v
}

// GetInputNewline returns the InputNewline field value
func (o *KeybindsConfig) GetInputNewline() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InputNewline
}

// GetInputNewlineOk returns a tuple with the InputNewline field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetInputNewlineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputNewline, true
}

// SetInputNewline sets field value
func (o *KeybindsConfig) SetInputNewline(v string) {
	o.InputNewline = v
}

// GetMessagesPageUp returns the MessagesPageUp field value
func (o *KeybindsConfig) GetMessagesPageUp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessagesPageUp
}

// GetMessagesPageUpOk returns a tuple with the MessagesPageUp field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetMessagesPageUpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesPageUp, true
}

// SetMessagesPageUp sets field value
func (o *KeybindsConfig) SetMessagesPageUp(v string) {
	o.MessagesPageUp = v
}

// GetMessagesPageDown returns the MessagesPageDown field value
func (o *KeybindsConfig) GetMessagesPageDown() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessagesPageDown
}

// GetMessagesPageDownOk returns a tuple with the MessagesPageDown field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetMessagesPageDownOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesPageDown, true
}

// SetMessagesPageDown sets field value
func (o *KeybindsConfig) SetMessagesPageDown(v string) {
	o.MessagesPageDown = v
}

// GetMessagesHalfPageUp returns the MessagesHalfPageUp field value
func (o *KeybindsConfig) GetMessagesHalfPageUp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessagesHalfPageUp
}

// GetMessagesHalfPageUpOk returns a tuple with the MessagesHalfPageUp field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetMessagesHalfPageUpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesHalfPageUp, true
}

// SetMessagesHalfPageUp sets field value
func (o *KeybindsConfig) SetMessagesHalfPageUp(v string) {
	o.MessagesHalfPageUp = v
}

// GetMessagesHalfPageDown returns the MessagesHalfPageDown field value
func (o *KeybindsConfig) GetMessagesHalfPageDown() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessagesHalfPageDown
}

// GetMessagesHalfPageDownOk returns a tuple with the MessagesHalfPageDown field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetMessagesHalfPageDownOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesHalfPageDown, true
}

// SetMessagesHalfPageDown sets field value
func (o *KeybindsConfig) SetMessagesHalfPageDown(v string) {
	o.MessagesHalfPageDown = v
}

// GetMessagesPrevious returns the MessagesPrevious field value
func (o *KeybindsConfig) GetMessagesPrevious() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessagesPrevious
}

// GetMessagesPreviousOk returns a tuple with the MessagesPrevious field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetMessagesPreviousOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesPrevious, true
}

// SetMessagesPrevious sets field value
func (o *KeybindsConfig) SetMessagesPrevious(v string) {
	o.MessagesPrevious = v
}

// GetMessagesNext returns the MessagesNext field value
func (o *KeybindsConfig) GetMessagesNext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessagesNext
}

// GetMessagesNextOk returns a tuple with the MessagesNext field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetMessagesNextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesNext, true
}

// SetMessagesNext sets field value
func (o *KeybindsConfig) SetMessagesNext(v string) {
	o.MessagesNext = v
}

// GetMessagesFirst returns the MessagesFirst field value
func (o *KeybindsConfig) GetMessagesFirst() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessagesFirst
}

// GetMessagesFirstOk returns a tuple with the MessagesFirst field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetMessagesFirstOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesFirst, true
}

// SetMessagesFirst sets field value
func (o *KeybindsConfig) SetMessagesFirst(v string) {
	o.MessagesFirst = v
}

// GetMessagesLast returns the MessagesLast field value
func (o *KeybindsConfig) GetMessagesLast() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessagesLast
}

// GetMessagesLastOk returns a tuple with the MessagesLast field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetMessagesLastOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesLast, true
}

// SetMessagesLast sets field value
func (o *KeybindsConfig) SetMessagesLast(v string) {
	o.MessagesLast = v
}

// GetMessagesLayoutToggle returns the MessagesLayoutToggle field value
func (o *KeybindsConfig) GetMessagesLayoutToggle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessagesLayoutToggle
}

// GetMessagesLayoutToggleOk returns a tuple with the MessagesLayoutToggle field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetMessagesLayoutToggleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesLayoutToggle, true
}

// SetMessagesLayoutToggle sets field value
func (o *KeybindsConfig) SetMessagesLayoutToggle(v string) {
	o.MessagesLayoutToggle = v
}

// GetMessagesCopy returns the MessagesCopy field value
func (o *KeybindsConfig) GetMessagesCopy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessagesCopy
}

// GetMessagesCopyOk returns a tuple with the MessagesCopy field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetMessagesCopyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesCopy, true
}

// SetMessagesCopy sets field value
func (o *KeybindsConfig) SetMessagesCopy(v string) {
	o.MessagesCopy = v
}

// GetMessagesRevert returns the MessagesRevert field value
func (o *KeybindsConfig) GetMessagesRevert() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessagesRevert
}

// GetMessagesRevertOk returns a tuple with the MessagesRevert field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetMessagesRevertOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessagesRevert, true
}

// SetMessagesRevert sets field value
func (o *KeybindsConfig) SetMessagesRevert(v string) {
	o.MessagesRevert = v
}

// GetAppExit returns the AppExit field value
func (o *KeybindsConfig) GetAppExit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppExit
}

// GetAppExitOk returns a tuple with the AppExit field value
// and a boolean to check if the value has been set.
func (o *KeybindsConfig) GetAppExitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppExit, true
}

// SetAppExit sets field value
func (o *KeybindsConfig) SetAppExit(v string) {
	o.AppExit = v
}

func (o KeybindsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeybindsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["leader"] = o.Leader
	toSerialize["app_help"] = o.AppHelp
	toSerialize["switch_mode"] = o.SwitchMode
	toSerialize["switch_mode_reverse"] = o.SwitchModeReverse
	toSerialize["editor_open"] = o.EditorOpen
	toSerialize["session_export"] = o.SessionExport
	toSerialize["session_new"] = o.SessionNew
	toSerialize["session_list"] = o.SessionList
	toSerialize["session_share"] = o.SessionShare
	toSerialize["session_unshare"] = o.SessionUnshare
	toSerialize["session_interrupt"] = o.SessionInterrupt
	toSerialize["session_compact"] = o.SessionCompact
	toSerialize["tool_details"] = o.ToolDetails
	toSerialize["model_list"] = o.ModelList
	toSerialize["theme_list"] = o.ThemeList
	toSerialize["file_list"] = o.FileList
	toSerialize["file_close"] = o.FileClose
	toSerialize["file_search"] = o.FileSearch
	toSerialize["file_diff_toggle"] = o.FileDiffToggle
	toSerialize["project_init"] = o.ProjectInit
	toSerialize["input_clear"] = o.InputClear
	toSerialize["input_paste"] = o.InputPaste
	toSerialize["input_submit"] = o.InputSubmit
	toSerialize["input_newline"] = o.InputNewline
	toSerialize["messages_page_up"] = o.MessagesPageUp
	toSerialize["messages_page_down"] = o.MessagesPageDown
	toSerialize["messages_half_page_up"] = o.MessagesHalfPageUp
	toSerialize["messages_half_page_down"] = o.MessagesHalfPageDown
	toSerialize["messages_previous"] = o.MessagesPrevious
	toSerialize["messages_next"] = o.MessagesNext
	toSerialize["messages_first"] = o.MessagesFirst
	toSerialize["messages_last"] = o.MessagesLast
	toSerialize["messages_layout_toggle"] = o.MessagesLayoutToggle
	toSerialize["messages_copy"] = o.MessagesCopy
	toSerialize["messages_revert"] = o.MessagesRevert
	toSerialize["app_exit"] = o.AppExit
	return toSerialize, nil
}

func (o *KeybindsConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"leader",
		"app_help",
		"switch_mode",
		"switch_mode_reverse",
		"editor_open",
		"session_export",
		"session_new",
		"session_list",
		"session_share",
		"session_unshare",
		"session_interrupt",
		"session_compact",
		"tool_details",
		"model_list",
		"theme_list",
		"file_list",
		"file_close",
		"file_search",
		"file_diff_toggle",
		"project_init",
		"input_clear",
		"input_paste",
		"input_submit",
		"input_newline",
		"messages_page_up",
		"messages_page_down",
		"messages_half_page_up",
		"messages_half_page_down",
		"messages_previous",
		"messages_next",
		"messages_first",
		"messages_last",
		"messages_layout_toggle",
		"messages_copy",
		"messages_revert",
		"app_exit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKeybindsConfig := _KeybindsConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKeybindsConfig)

	if err != nil {
		return err
	}

	*o = KeybindsConfig(varKeybindsConfig)

	return err
}

type NullableKeybindsConfig struct {
	value *KeybindsConfig
	isSet bool
}

func (v NullableKeybindsConfig) Get() *KeybindsConfig {
	return v.value
}

func (v *NullableKeybindsConfig) Set(val *KeybindsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableKeybindsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableKeybindsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeybindsConfig(val *KeybindsConfig) *NullableKeybindsConfig {
	return &NullableKeybindsConfig{value: val, isSet: true}
}

func (v NullableKeybindsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeybindsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


