/*
kuucode

opencode api

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kuucode

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostSessionByIdMessageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostSessionByIdMessageRequest{}

// PostSessionByIdMessageRequest struct for PostSessionByIdMessageRequest
type PostSessionByIdMessageRequest struct {
	MessageID *string `json:"messageID,omitempty" validate:"regexp=^msg"`
	ProviderID string `json:"providerID"`
	ModelID string `json:"modelID"`
	Mode *string `json:"mode,omitempty"`
	Tools *map[string]bool `json:"tools,omitempty"`
	Parts []PostSessionByIdMessageRequestPartsInner `json:"parts"`
}

type _PostSessionByIdMessageRequest PostSessionByIdMessageRequest

// NewPostSessionByIdMessageRequest instantiates a new PostSessionByIdMessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostSessionByIdMessageRequest(providerID string, modelID string, parts []PostSessionByIdMessageRequestPartsInner) *PostSessionByIdMessageRequest {
	this := PostSessionByIdMessageRequest{}
	this.ProviderID = providerID
	this.ModelID = modelID
	this.Parts = parts
	return &this
}

// NewPostSessionByIdMessageRequestWithDefaults instantiates a new PostSessionByIdMessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostSessionByIdMessageRequestWithDefaults() *PostSessionByIdMessageRequest {
	this := PostSessionByIdMessageRequest{}
	return &this
}

// GetMessageID returns the MessageID field value if set, zero value otherwise.
func (o *PostSessionByIdMessageRequest) GetMessageID() string {
	if o == nil || IsNil(o.MessageID) {
		var ret string
		return ret
	}
	return *o.MessageID
}

// GetMessageIDOk returns a tuple with the MessageID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostSessionByIdMessageRequest) GetMessageIDOk() (*string, bool) {
	if o == nil || IsNil(o.MessageID) {
		return nil, false
	}
	return o.MessageID, true
}

// HasMessageID returns a boolean if a field has been set.
func (o *PostSessionByIdMessageRequest) HasMessageID() bool {
	if o != nil && !IsNil(o.MessageID) {
		return true
	}

	return false
}

// SetMessageID gets a reference to the given string and assigns it to the MessageID field.
func (o *PostSessionByIdMessageRequest) SetMessageID(v string) {
	o.MessageID = &v
}

// GetProviderID returns the ProviderID field value
func (o *PostSessionByIdMessageRequest) GetProviderID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderID
}

// GetProviderIDOk returns a tuple with the ProviderID field value
// and a boolean to check if the value has been set.
func (o *PostSessionByIdMessageRequest) GetProviderIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderID, true
}

// SetProviderID sets field value
func (o *PostSessionByIdMessageRequest) SetProviderID(v string) {
	o.ProviderID = v
}

// GetModelID returns the ModelID field value
func (o *PostSessionByIdMessageRequest) GetModelID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelID
}

// GetModelIDOk returns a tuple with the ModelID field value
// and a boolean to check if the value has been set.
func (o *PostSessionByIdMessageRequest) GetModelIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelID, true
}

// SetModelID sets field value
func (o *PostSessionByIdMessageRequest) SetModelID(v string) {
	o.ModelID = v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *PostSessionByIdMessageRequest) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostSessionByIdMessageRequest) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *PostSessionByIdMessageRequest) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *PostSessionByIdMessageRequest) SetMode(v string) {
	o.Mode = &v
}

// GetTools returns the Tools field value if set, zero value otherwise.
func (o *PostSessionByIdMessageRequest) GetTools() map[string]bool {
	if o == nil || IsNil(o.Tools) {
		var ret map[string]bool
		return ret
	}
	return *o.Tools
}

// GetToolsOk returns a tuple with the Tools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostSessionByIdMessageRequest) GetToolsOk() (*map[string]bool, bool) {
	if o == nil || IsNil(o.Tools) {
		return nil, false
	}
	return o.Tools, true
}

// HasTools returns a boolean if a field has been set.
func (o *PostSessionByIdMessageRequest) HasTools() bool {
	if o != nil && !IsNil(o.Tools) {
		return true
	}

	return false
}

// SetTools gets a reference to the given map[string]bool and assigns it to the Tools field.
func (o *PostSessionByIdMessageRequest) SetTools(v map[string]bool) {
	o.Tools = &v
}

// GetParts returns the Parts field value
func (o *PostSessionByIdMessageRequest) GetParts() []PostSessionByIdMessageRequestPartsInner {
	if o == nil {
		var ret []PostSessionByIdMessageRequestPartsInner
		return ret
	}

	return o.Parts
}

// GetPartsOk returns a tuple with the Parts field value
// and a boolean to check if the value has been set.
func (o *PostSessionByIdMessageRequest) GetPartsOk() ([]PostSessionByIdMessageRequestPartsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parts, true
}

// SetParts sets field value
func (o *PostSessionByIdMessageRequest) SetParts(v []PostSessionByIdMessageRequestPartsInner) {
	o.Parts = v
}

func (o PostSessionByIdMessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostSessionByIdMessageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageID) {
		toSerialize["messageID"] = o.MessageID
	}
	toSerialize["providerID"] = o.ProviderID
	toSerialize["modelID"] = o.ModelID
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.Tools) {
		toSerialize["tools"] = o.Tools
	}
	toSerialize["parts"] = o.Parts
	return toSerialize, nil
}

func (o *PostSessionByIdMessageRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"providerID",
		"modelID",
		"parts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostSessionByIdMessageRequest := _PostSessionByIdMessageRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostSessionByIdMessageRequest)

	if err != nil {
		return err
	}

	*o = PostSessionByIdMessageRequest(varPostSessionByIdMessageRequest)

	return err
}

type NullablePostSessionByIdMessageRequest struct {
	value *PostSessionByIdMessageRequest
	isSet bool
}

func (v NullablePostSessionByIdMessageRequest) Get() *PostSessionByIdMessageRequest {
	return v.value
}

func (v *NullablePostSessionByIdMessageRequest) Set(val *PostSessionByIdMessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostSessionByIdMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostSessionByIdMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostSessionByIdMessageRequest(val *PostSessionByIdMessageRequest) *NullablePostSessionByIdMessageRequest {
	return &NullablePostSessionByIdMessageRequest{value: val, isSet: true}
}

func (v NullablePostSessionByIdMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostSessionByIdMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


