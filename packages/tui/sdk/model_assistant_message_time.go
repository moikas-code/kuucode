/*
kuucode

opencode api

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kuucode

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AssistantMessageTime type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssistantMessageTime{}

// AssistantMessageTime struct for AssistantMessageTime
type AssistantMessageTime struct {
	Created float32 `json:"created"`
	Completed *float32 `json:"completed,omitempty"`
}

type _AssistantMessageTime AssistantMessageTime

// NewAssistantMessageTime instantiates a new AssistantMessageTime object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssistantMessageTime(created float32) *AssistantMessageTime {
	this := AssistantMessageTime{}
	this.Created = created
	return &this
}

// NewAssistantMessageTimeWithDefaults instantiates a new AssistantMessageTime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssistantMessageTimeWithDefaults() *AssistantMessageTime {
	this := AssistantMessageTime{}
	return &this
}

// GetCreated returns the Created field value
func (o *AssistantMessageTime) GetCreated() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *AssistantMessageTime) GetCreatedOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *AssistantMessageTime) SetCreated(v float32) {
	o.Created = v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *AssistantMessageTime) GetCompleted() float32 {
	if o == nil || IsNil(o.Completed) {
		var ret float32
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssistantMessageTime) GetCompletedOk() (*float32, bool) {
	if o == nil || IsNil(o.Completed) {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *AssistantMessageTime) HasCompleted() bool {
	if o != nil && !IsNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given float32 and assigns it to the Completed field.
func (o *AssistantMessageTime) SetCompleted(v float32) {
	o.Completed = &v
}

func (o AssistantMessageTime) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssistantMessageTime) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created"] = o.Created
	if !IsNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	return toSerialize, nil
}

func (o *AssistantMessageTime) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAssistantMessageTime := _AssistantMessageTime{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAssistantMessageTime)

	if err != nil {
		return err
	}

	*o = AssistantMessageTime(varAssistantMessageTime)

	return err
}

type NullableAssistantMessageTime struct {
	value *AssistantMessageTime
	isSet bool
}

func (v NullableAssistantMessageTime) Get() *AssistantMessageTime {
	return v.value
}

func (v *NullableAssistantMessageTime) Set(val *AssistantMessageTime) {
	v.value = val
	v.isSet = true
}

func (v NullableAssistantMessageTime) IsSet() bool {
	return v.isSet
}

func (v *NullableAssistantMessageTime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssistantMessageTime(val *AssistantMessageTime) *NullableAssistantMessageTime {
	return &NullableAssistantMessageTime{value: val, isSet: true}
}

func (v NullableAssistantMessageTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssistantMessageTime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


