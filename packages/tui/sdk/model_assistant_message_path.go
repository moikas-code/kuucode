/*
kuucode

kuucode api

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kuucode

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AssistantMessagePath type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssistantMessagePath{}

// AssistantMessagePath struct for AssistantMessagePath
type AssistantMessagePath struct {
	Cwd  string `json:"cwd"`
	Root string `json:"root"`
}

type _AssistantMessagePath AssistantMessagePath

// NewAssistantMessagePath instantiates a new AssistantMessagePath object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssistantMessagePath(cwd string, root string) *AssistantMessagePath {
	this := AssistantMessagePath{}
	this.Cwd = cwd
	this.Root = root
	return &this
}

// NewAssistantMessagePathWithDefaults instantiates a new AssistantMessagePath object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssistantMessagePathWithDefaults() *AssistantMessagePath {
	this := AssistantMessagePath{}
	return &this
}

// GetCwd returns the Cwd field value
func (o *AssistantMessagePath) GetCwd() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cwd
}

// GetCwdOk returns a tuple with the Cwd field value
// and a boolean to check if the value has been set.
func (o *AssistantMessagePath) GetCwdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cwd, true
}

// SetCwd sets field value
func (o *AssistantMessagePath) SetCwd(v string) {
	o.Cwd = v
}

// GetRoot returns the Root field value
func (o *AssistantMessagePath) GetRoot() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Root
}

// GetRootOk returns a tuple with the Root field value
// and a boolean to check if the value has been set.
func (o *AssistantMessagePath) GetRootOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Root, true
}

// SetRoot sets field value
func (o *AssistantMessagePath) SetRoot(v string) {
	o.Root = v
}

func (o AssistantMessagePath) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssistantMessagePath) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cwd"] = o.Cwd
	toSerialize["root"] = o.Root
	return toSerialize, nil
}

func (o *AssistantMessagePath) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cwd",
		"root",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAssistantMessagePath := _AssistantMessagePath{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAssistantMessagePath)

	if err != nil {
		return err
	}

	*o = AssistantMessagePath(varAssistantMessagePath)

	return err
}

type NullableAssistantMessagePath struct {
	value *AssistantMessagePath
	isSet bool
}

func (v NullableAssistantMessagePath) Get() *AssistantMessagePath {
	return v.value
}

func (v *NullableAssistantMessagePath) Set(val *AssistantMessagePath) {
	v.value = val
	v.isSet = true
}

func (v NullableAssistantMessagePath) IsSet() bool {
	return v.isSet
}

func (v *NullableAssistantMessagePath) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssistantMessagePath(val *AssistantMessagePath) *NullableAssistantMessagePath {
	return &NullableAssistantMessagePath{value: val, isSet: true}
}

func (v NullableAssistantMessagePath) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssistantMessagePath) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
