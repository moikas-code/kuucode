/*
kuucode

opencode api

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kuucode

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EventMessagePartUpdatedProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventMessagePartUpdatedProperties{}

// EventMessagePartUpdatedProperties struct for EventMessagePartUpdatedProperties
type EventMessagePartUpdatedProperties struct {
	Part Part `json:"part"`
}

type _EventMessagePartUpdatedProperties EventMessagePartUpdatedProperties

// NewEventMessagePartUpdatedProperties instantiates a new EventMessagePartUpdatedProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventMessagePartUpdatedProperties(part Part) *EventMessagePartUpdatedProperties {
	this := EventMessagePartUpdatedProperties{}
	this.Part = part
	return &this
}

// NewEventMessagePartUpdatedPropertiesWithDefaults instantiates a new EventMessagePartUpdatedProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventMessagePartUpdatedPropertiesWithDefaults() *EventMessagePartUpdatedProperties {
	this := EventMessagePartUpdatedProperties{}
	return &this
}

// GetPart returns the Part field value
func (o *EventMessagePartUpdatedProperties) GetPart() Part {
	if o == nil {
		var ret Part
		return ret
	}

	return o.Part
}

// GetPartOk returns a tuple with the Part field value
// and a boolean to check if the value has been set.
func (o *EventMessagePartUpdatedProperties) GetPartOk() (*Part, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Part, true
}

// SetPart sets field value
func (o *EventMessagePartUpdatedProperties) SetPart(v Part) {
	o.Part = v
}

func (o EventMessagePartUpdatedProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventMessagePartUpdatedProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["part"] = o.Part
	return toSerialize, nil
}

func (o *EventMessagePartUpdatedProperties) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"part",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventMessagePartUpdatedProperties := _EventMessagePartUpdatedProperties{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEventMessagePartUpdatedProperties)

	if err != nil {
		return err
	}

	*o = EventMessagePartUpdatedProperties(varEventMessagePartUpdatedProperties)

	return err
}

type NullableEventMessagePartUpdatedProperties struct {
	value *EventMessagePartUpdatedProperties
	isSet bool
}

func (v NullableEventMessagePartUpdatedProperties) Get() *EventMessagePartUpdatedProperties {
	return v.value
}

func (v *NullableEventMessagePartUpdatedProperties) Set(val *EventMessagePartUpdatedProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableEventMessagePartUpdatedProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableEventMessagePartUpdatedProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventMessagePartUpdatedProperties(val *EventMessagePartUpdatedProperties) *NullableEventMessagePartUpdatedProperties {
	return &NullableEventMessagePartUpdatedProperties{value: val, isSet: true}
}

func (v NullableEventMessagePartUpdatedProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventMessagePartUpdatedProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


