/*
kuucode

opencode api

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kuucode

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SessionTime type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionTime{}

// SessionTime struct for SessionTime
type SessionTime struct {
	Created float32 `json:"created"`
	Updated float32 `json:"updated"`
}

type _SessionTime SessionTime

// NewSessionTime instantiates a new SessionTime object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionTime(created float32, updated float32) *SessionTime {
	this := SessionTime{}
	this.Created = created
	this.Updated = updated
	return &this
}

// NewSessionTimeWithDefaults instantiates a new SessionTime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionTimeWithDefaults() *SessionTime {
	this := SessionTime{}
	return &this
}

// GetCreated returns the Created field value
func (o *SessionTime) GetCreated() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *SessionTime) GetCreatedOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *SessionTime) SetCreated(v float32) {
	o.Created = v
}

// GetUpdated returns the Updated field value
func (o *SessionTime) GetUpdated() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *SessionTime) GetUpdatedOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *SessionTime) SetUpdated(v float32) {
	o.Updated = v
}

func (o SessionTime) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionTime) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created"] = o.Created
	toSerialize["updated"] = o.Updated
	return toSerialize, nil
}

func (o *SessionTime) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created",
		"updated",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSessionTime := _SessionTime{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSessionTime)

	if err != nil {
		return err
	}

	*o = SessionTime(varSessionTime)

	return err
}

type NullableSessionTime struct {
	value *SessionTime
	isSet bool
}

func (v NullableSessionTime) Get() *SessionTime {
	return v.value
}

func (v *NullableSessionTime) Set(val *SessionTime) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionTime) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionTime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionTime(val *SessionTime) *NullableSessionTime {
	return &NullableSessionTime{value: val, isSet: true}
}

func (v NullableSessionTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionTime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


