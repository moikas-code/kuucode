/*
kuucode

opencode api

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kuucode

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EventMessageUpdatedProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventMessageUpdatedProperties{}

// EventMessageUpdatedProperties struct for EventMessageUpdatedProperties
type EventMessageUpdatedProperties struct {
	Info Message `json:"info"`
}

type _EventMessageUpdatedProperties EventMessageUpdatedProperties

// NewEventMessageUpdatedProperties instantiates a new EventMessageUpdatedProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventMessageUpdatedProperties(info Message) *EventMessageUpdatedProperties {
	this := EventMessageUpdatedProperties{}
	this.Info = info
	return &this
}

// NewEventMessageUpdatedPropertiesWithDefaults instantiates a new EventMessageUpdatedProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventMessageUpdatedPropertiesWithDefaults() *EventMessageUpdatedProperties {
	this := EventMessageUpdatedProperties{}
	return &this
}

// GetInfo returns the Info field value
func (o *EventMessageUpdatedProperties) GetInfo() Message {
	if o == nil {
		var ret Message
		return ret
	}

	return o.Info
}

// GetInfoOk returns a tuple with the Info field value
// and a boolean to check if the value has been set.
func (o *EventMessageUpdatedProperties) GetInfoOk() (*Message, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Info, true
}

// SetInfo sets field value
func (o *EventMessageUpdatedProperties) SetInfo(v Message) {
	o.Info = v
}

func (o EventMessageUpdatedProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventMessageUpdatedProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["info"] = o.Info
	return toSerialize, nil
}

func (o *EventMessageUpdatedProperties) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"info",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventMessageUpdatedProperties := _EventMessageUpdatedProperties{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEventMessageUpdatedProperties)

	if err != nil {
		return err
	}

	*o = EventMessageUpdatedProperties(varEventMessageUpdatedProperties)

	return err
}

type NullableEventMessageUpdatedProperties struct {
	value *EventMessageUpdatedProperties
	isSet bool
}

func (v NullableEventMessageUpdatedProperties) Get() *EventMessageUpdatedProperties {
	return v.value
}

func (v *NullableEventMessageUpdatedProperties) Set(val *EventMessageUpdatedProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableEventMessageUpdatedProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableEventMessageUpdatedProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventMessageUpdatedProperties(val *EventMessageUpdatedProperties) *NullableEventMessageUpdatedProperties {
	return &NullableEventMessageUpdatedProperties{value: val, isSet: true}
}

func (v NullableEventMessageUpdatedProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventMessageUpdatedProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


