/*
kuucode

opencode api

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kuucode

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostLogRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostLogRequest{}

// PostLogRequest struct for PostLogRequest
type PostLogRequest struct {
	// Service name for the log entry
	Service string `json:"service"`
	// Log level
	Level string `json:"level"`
	// Log message
	Message string `json:"message"`
	// Additional metadata for the log entry
	Extra map[string]interface{} `json:"extra,omitempty"`
}

type _PostLogRequest PostLogRequest

// NewPostLogRequest instantiates a new PostLogRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostLogRequest(service string, level string, message string) *PostLogRequest {
	this := PostLogRequest{}
	this.Service = service
	this.Level = level
	this.Message = message
	return &this
}

// NewPostLogRequestWithDefaults instantiates a new PostLogRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostLogRequestWithDefaults() *PostLogRequest {
	this := PostLogRequest{}
	return &this
}

// GetService returns the Service field value
func (o *PostLogRequest) GetService() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *PostLogRequest) GetServiceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *PostLogRequest) SetService(v string) {
	o.Service = v
}

// GetLevel returns the Level field value
func (o *PostLogRequest) GetLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *PostLogRequest) GetLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *PostLogRequest) SetLevel(v string) {
	o.Level = v
}

// GetMessage returns the Message field value
func (o *PostLogRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *PostLogRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *PostLogRequest) SetMessage(v string) {
	o.Message = v
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *PostLogRequest) GetExtra() map[string]interface{} {
	if o == nil || IsNil(o.Extra) {
		var ret map[string]interface{}
		return ret
	}
	return o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostLogRequest) GetExtraOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Extra) {
		return map[string]interface{}{}, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *PostLogRequest) HasExtra() bool {
	if o != nil && !IsNil(o.Extra) {
		return true
	}

	return false
}

// SetExtra gets a reference to the given map[string]interface{} and assigns it to the Extra field.
func (o *PostLogRequest) SetExtra(v map[string]interface{}) {
	o.Extra = v
}

func (o PostLogRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostLogRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["service"] = o.Service
	toSerialize["level"] = o.Level
	toSerialize["message"] = o.Message
	if !IsNil(o.Extra) {
		toSerialize["extra"] = o.Extra
	}
	return toSerialize, nil
}

func (o *PostLogRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"service",
		"level",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostLogRequest := _PostLogRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostLogRequest)

	if err != nil {
		return err
	}

	*o = PostLogRequest(varPostLogRequest)

	return err
}

type NullablePostLogRequest struct {
	value *PostLogRequest
	isSet bool
}

func (v NullablePostLogRequest) Get() *PostLogRequest {
	return v.value
}

func (v *NullablePostLogRequest) Set(val *PostLogRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostLogRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostLogRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostLogRequest(val *PostLogRequest) *NullablePostLogRequest {
	return &NullablePostLogRequest{value: val, isSet: true}
}

func (v NullablePostLogRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostLogRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


