/*
kuucode

opencode api

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kuucode

import (
	"encoding/json"
)

// checks if the ConfigExperimentalHook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigExperimentalHook{}

// ConfigExperimentalHook struct for ConfigExperimentalHook
type ConfigExperimentalHook struct {
	FileEdited *map[string][]ConfigExperimentalHookFileEditedValueInner `json:"file_edited,omitempty"`
	SessionCompleted []ConfigExperimentalHookFileEditedValueInner `json:"session_completed,omitempty"`
}

// NewConfigExperimentalHook instantiates a new ConfigExperimentalHook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigExperimentalHook() *ConfigExperimentalHook {
	this := ConfigExperimentalHook{}
	return &this
}

// NewConfigExperimentalHookWithDefaults instantiates a new ConfigExperimentalHook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigExperimentalHookWithDefaults() *ConfigExperimentalHook {
	this := ConfigExperimentalHook{}
	return &this
}

// GetFileEdited returns the FileEdited field value if set, zero value otherwise.
func (o *ConfigExperimentalHook) GetFileEdited() map[string][]ConfigExperimentalHookFileEditedValueInner {
	if o == nil || IsNil(o.FileEdited) {
		var ret map[string][]ConfigExperimentalHookFileEditedValueInner
		return ret
	}
	return *o.FileEdited
}

// GetFileEditedOk returns a tuple with the FileEdited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigExperimentalHook) GetFileEditedOk() (*map[string][]ConfigExperimentalHookFileEditedValueInner, bool) {
	if o == nil || IsNil(o.FileEdited) {
		return nil, false
	}
	return o.FileEdited, true
}

// HasFileEdited returns a boolean if a field has been set.
func (o *ConfigExperimentalHook) HasFileEdited() bool {
	if o != nil && !IsNil(o.FileEdited) {
		return true
	}

	return false
}

// SetFileEdited gets a reference to the given map[string][]ConfigExperimentalHookFileEditedValueInner and assigns it to the FileEdited field.
func (o *ConfigExperimentalHook) SetFileEdited(v map[string][]ConfigExperimentalHookFileEditedValueInner) {
	o.FileEdited = &v
}

// GetSessionCompleted returns the SessionCompleted field value if set, zero value otherwise.
func (o *ConfigExperimentalHook) GetSessionCompleted() []ConfigExperimentalHookFileEditedValueInner {
	if o == nil || IsNil(o.SessionCompleted) {
		var ret []ConfigExperimentalHookFileEditedValueInner
		return ret
	}
	return o.SessionCompleted
}

// GetSessionCompletedOk returns a tuple with the SessionCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigExperimentalHook) GetSessionCompletedOk() ([]ConfigExperimentalHookFileEditedValueInner, bool) {
	if o == nil || IsNil(o.SessionCompleted) {
		return nil, false
	}
	return o.SessionCompleted, true
}

// HasSessionCompleted returns a boolean if a field has been set.
func (o *ConfigExperimentalHook) HasSessionCompleted() bool {
	if o != nil && !IsNil(o.SessionCompleted) {
		return true
	}

	return false
}

// SetSessionCompleted gets a reference to the given []ConfigExperimentalHookFileEditedValueInner and assigns it to the SessionCompleted field.
func (o *ConfigExperimentalHook) SetSessionCompleted(v []ConfigExperimentalHookFileEditedValueInner) {
	o.SessionCompleted = v
}

func (o ConfigExperimentalHook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigExperimentalHook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileEdited) {
		toSerialize["file_edited"] = o.FileEdited
	}
	if !IsNil(o.SessionCompleted) {
		toSerialize["session_completed"] = o.SessionCompleted
	}
	return toSerialize, nil
}

type NullableConfigExperimentalHook struct {
	value *ConfigExperimentalHook
	isSet bool
}

func (v NullableConfigExperimentalHook) Get() *ConfigExperimentalHook {
	return v.value
}

func (v *NullableConfigExperimentalHook) Set(val *ConfigExperimentalHook) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigExperimentalHook) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigExperimentalHook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigExperimentalHook(val *ConfigExperimentalHook) *NullableConfigExperimentalHook {
	return &NullableConfigExperimentalHook{value: val, isSet: true}
}

func (v NullableConfigExperimentalHook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigExperimentalHook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


