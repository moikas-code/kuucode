/*
kuucode

opencode api

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kuucode

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetConfigProviders200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetConfigProviders200Response{}

// GetConfigProviders200Response struct for GetConfigProviders200Response
type GetConfigProviders200Response struct {
	Providers []Provider `json:"providers"`
	Default map[string]string `json:"default"`
}

type _GetConfigProviders200Response GetConfigProviders200Response

// NewGetConfigProviders200Response instantiates a new GetConfigProviders200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConfigProviders200Response(providers []Provider, default_ map[string]string) *GetConfigProviders200Response {
	this := GetConfigProviders200Response{}
	this.Providers = providers
	this.Default = default_
	return &this
}

// NewGetConfigProviders200ResponseWithDefaults instantiates a new GetConfigProviders200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConfigProviders200ResponseWithDefaults() *GetConfigProviders200Response {
	this := GetConfigProviders200Response{}
	return &this
}

// GetProviders returns the Providers field value
func (o *GetConfigProviders200Response) GetProviders() []Provider {
	if o == nil {
		var ret []Provider
		return ret
	}

	return o.Providers
}

// GetProvidersOk returns a tuple with the Providers field value
// and a boolean to check if the value has been set.
func (o *GetConfigProviders200Response) GetProvidersOk() ([]Provider, bool) {
	if o == nil {
		return nil, false
	}
	return o.Providers, true
}

// SetProviders sets field value
func (o *GetConfigProviders200Response) SetProviders(v []Provider) {
	o.Providers = v
}

// GetDefault returns the Default field value
func (o *GetConfigProviders200Response) GetDefault() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Default
}

// GetDefaultOk returns a tuple with the Default field value
// and a boolean to check if the value has been set.
func (o *GetConfigProviders200Response) GetDefaultOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Default, true
}

// SetDefault sets field value
func (o *GetConfigProviders200Response) SetDefault(v map[string]string) {
	o.Default = v
}

func (o GetConfigProviders200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetConfigProviders200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["providers"] = o.Providers
	toSerialize["default"] = o.Default
	return toSerialize, nil
}

func (o *GetConfigProviders200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"providers",
		"default",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetConfigProviders200Response := _GetConfigProviders200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetConfigProviders200Response)

	if err != nil {
		return err
	}

	*o = GetConfigProviders200Response(varGetConfigProviders200Response)

	return err
}

type NullableGetConfigProviders200Response struct {
	value *GetConfigProviders200Response
	isSet bool
}

func (v NullableGetConfigProviders200Response) Get() *GetConfigProviders200Response {
	return v.value
}

func (v *NullableGetConfigProviders200Response) Set(val *GetConfigProviders200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConfigProviders200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConfigProviders200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConfigProviders200Response(val *GetConfigProviders200Response) *NullableGetConfigProviders200Response {
	return &NullableGetConfigProviders200Response{value: val, isSet: true}
}

func (v NullableGetConfigProviders200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConfigProviders200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


