/* tslint:disable */
/* eslint-disable */
/**
 * kuuzuki
 * kuuzuki API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface AppPath
 */
export interface AppPath {
    /**
     *
     * @type {string}
     * @memberof AppPath
     */
    config?: string;
    /**
     *
     * @type {string}
     * @memberof AppPath
     */
    data?: string;
    /**
     *
     * @type {string}
     * @memberof AppPath
     */
    root?: string;
    /**
     *
     * @type {string}
     * @memberof AppPath
     */
    cwd?: string;
    /**
     *
     * @type {string}
     * @memberof AppPath
     */
    state?: string;
}

/**
 * Check if a given object implements the AppPath interface.
 */
export function instanceOfAppPath(value: object): value is AppPath {
    return true;
}

export function AppPathFromJSON(json: any): AppPath {
    return AppPathFromJSONTyped(json, false);
}

export function AppPathFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppPath {
    if (json == null) {
        return json;
    }
    return {

        'config': json['config'] == null ? undefined : json['config'],
        'data': json['data'] == null ? undefined : json['data'],
        'root': json['root'] == null ? undefined : json['root'],
        'cwd': json['cwd'] == null ? undefined : json['cwd'],
        'state': json['state'] == null ? undefined : json['state'],
    };
}

export function AppPathToJSON(json: any): AppPath {
    return AppPathToJSONTyped(json, false);
}

export function AppPathToJSONTyped(value?: AppPath | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'config': value['config'],
        'data': value['data'],
        'root': value['root'],
        'cwd': value['cwd'],
        'state': value['state'],
    };
}
